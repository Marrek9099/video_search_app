{"version":3,"sources":["components/SearchBar.js","components/SelectedVideo.js","components/VideoList.js","components/App.js","index.js"],"names":["SearchBar","onTermChange","useState","term","setTerm","onSubmit","e","preventDefault","value","onChange","target","type","SelectedVideo","selectedVideo","className","height","src","id","videoId","title","snippet","description","VideoList","videosList","onVideoSelect","renderedVideosList","map","video","onClick","alt","thumbnails","medium","url","setVideoList","setSelectedVideo","a","axios","get","params","part","maxResults","key","q","response","data","items","useEffect","ReactDOM","render","App","document","querySelector"],"mappings":"4OAqBeA,EAlBG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAQlC,OACQ,uBAAMC,SANO,SAAAC,GACjBA,EAAEC,iBACFN,EAAaE,IAIT,yBAEI,uBAAOK,MAAOL,EAAMM,SAAW,SAAAH,GAAC,OAAIF,EAAQE,EAAEI,OAAOF,QAAQG,KAAK,aCInEC,EAfO,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACpB,OAAGA,EAEK,sBAAKC,UAAU,gBAAf,UACI,wBAAQA,UAAU,cAAeC,OAAO,MAAMC,IAAG,wCAAmCH,EAAcI,GAAGC,SAAWC,MAAM,yBACtH,sBAAKL,UAAU,mBAAf,UACI,6BAAKD,EAAcO,QAAQD,QAC3B,4BAAIN,EAAcO,QAAQC,oBAKnC,WCIIC,EAfG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cACtBC,EAAqBF,EAAWG,KAAK,SAAAC,GACxC,OAAS,sBAAKC,QAAS,kBAAMJ,EAAcG,IAAQb,UAAU,YAApD,UACI,qBAAKe,IAAKF,EAAMP,QAAQD,MAAOH,IAAKW,EAAMP,QAAQU,WAAWC,OAAOC,MACpE,4BAAIL,EAAMP,QAAQD,UAF+CQ,EAAMV,GAAGC,YAK1F,OACI,qBAAKJ,UAAU,YAAf,SACSW,KCNF,aAAO,IAAD,EAEkBvB,mBAAS,IAF3B,mBAEVqB,EAFU,KAEEU,EAFF,OAGyB/B,mBAAS,IAHlC,mBAGVW,EAHU,KAGKqB,EAHL,KAMXjC,EAAY,uCAAG,WAAME,GAAN,eAAAgC,EAAA,sEACMC,IAAMC,IAAI,+CAA+C,CAC5EC,OAAQ,CACJC,KAAM,UACNC,WAAY,IACZC,IAAK,0CACLC,EAAGvC,KANM,OACXwC,EADW,OAUjBV,EAAaU,EAASC,KAAKC,OAC3BX,EAAiBS,EAASC,KAAKC,MAAM,IAXpB,2CAAH,sDAyBlB,OAJAC,qBAAU,WACN7C,EAAa,YACd,IAGK,gCACI,cAAC,EAAD,CAAWA,aAAcA,IACzB,sBAAKa,UAAU,SAAf,UACI,cAAC,EAAD,CAAeD,cAAeA,IAC9B,cAAC,EAAD,CAAWU,WAAYA,EAAYC,cAd7B,SAAAG,GAClBO,EAAiBP,aCxBzBoB,IAASC,OACL,cAACC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.386a0cd9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst SearchBar = ({onTermChange}) => {\r\n    const [term, setTerm] = useState('');\r\n\r\n    const onFormSubmut = e => {\r\n        e.preventDefault();\r\n        onTermChange(term);\r\n    }\r\n\r\n    return (\r\n            <form onSubmit={onFormSubmut}>\r\n                Video Search\r\n                <input value={term} onChange={ e => setTerm(e.target.value)} type=\"text\"/> \r\n            </form>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\n\r\nconst SelectedVideo = ({selectedVideo}) => {\r\n    if(selectedVideo) {\r\n        return ( \r\n            <div className=\"selectedVideo\" >\r\n                <iframe className=\"videoPlayer\"  height=\"315\" src={`https://www.youtube.com/embed/${selectedVideo.id.videoId}`} title=\"YouTube video player\"></iframe>\r\n                <div className=\"videoDescription\">\r\n                    <h3>{selectedVideo.snippet.title}</h3>\r\n                    <p>{selectedVideo.snippet.description}</p>\r\n                </div>\r\n           </div>\r\n           )\r\n        }\r\n    return 'loading';\r\n}\r\n\r\nexport default SelectedVideo;","import React from 'react';\r\n\r\n\r\n\r\nconst VideoList = ({videosList, onVideoSelect}) => {\r\n    const renderedVideosList = videosList.map( video => {\r\n       return ( <div onClick={() => onVideoSelect(video)} className=\"videoItem\" key={video.id.videoId}>\r\n                    <img alt={video.snippet.title} src={video.snippet.thumbnails.medium.url}/>\r\n                    <p>{video.snippet.title}</p>\r\n                </div>)\r\n    });\r\n    return (\r\n        <div className=\"videoList\">\r\n                {renderedVideosList}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default VideoList;","import './Main.css'\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar';\r\nimport SelectedVideo from './SelectedVideo';\r\nimport VideoList from './VideoList';\r\n\r\nexport default () => {\r\n    \r\n    const [videosList, setVideoList] = useState([]);\r\n    const [selectedVideo, setSelectedVideo] = useState('');\r\n  \r\n    \r\n    const onTermChange = async term => {\r\n        const response = await axios.get('https://www.googleapis.com/youtube/v3/search',{\r\n            params: {\r\n                part: 'snippet',\r\n                maxResults: '5',\r\n                key: 'AIzaSyBYOm4jpsO-TSwZ61-Wl8FOlaqKbRnZV4g',\r\n                q: term\r\n           }\r\n        });\r\n\r\n        setVideoList(response.data.items);\r\n        setSelectedVideo(response.data.items[0]);\r\n       \r\n    }\r\n\r\n\r\n    const onVideoSelect = video => {\r\n        setSelectedVideo(video);\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        onTermChange('houses');\r\n    }, []);\r\n     \r\n    return (\r\n            <div>\r\n                <SearchBar onTermChange={onTermChange}/>\r\n                <div className=\"videos\">\r\n                    <SelectedVideo selectedVideo={selectedVideo}/>\r\n                    <VideoList videosList={videosList} onVideoSelect={onVideoSelect}/>\r\n                </div>\r\n            </div>\r\n        )  \r\n    \r\n  \r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}